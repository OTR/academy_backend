#_______________________________________________________________________________
# H2 DATABASE SETTINGS
#_______________________________________________________________________________
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.url=jdbc:h2:file:./.app_data/academy
spring.datasource.username=
spring.datasource.password=
spring.sql.init.mode=always


# Load initial data
spring.datasource.initialization-mode=always
#spring.datasource.data=classpath:categories.sql

# Enable h2 console
spring.h2.console.enabled=true

#_______________________________________________________________________________
# JPA / HIBERNATE
#_______________________________________________________________________________
spring.jpa.show-sql = true

# Hibernate DDL auto
# Options = [create, create-drop, validate, update]
spring.jpa.hibernate.ddl-auto = update

# Hibernate properties
# The SQL dialect makes Hibernate generate better SQL for the chosen database
# For MySQL
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
# For H2
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect


#_______________________________________________________________________________
# Logging formatter
#_______________________________________________________________________________
logging.pattern.console=%d{HH:mm:ss}|%level|%clr(%msg%n){cyan}


#_______________________________________________________________________________
# Variables for Thymeleaf
#_______________________________________________________________________________
# Index page
path.index = /
title.index = Academy

# Projects page
path.projects = /projects
title.projects = Projects

# Tracks page
path.tracks = /tracks
title.tracks = Tracks

# Detail Category page
path.category = /category
title.category = Category

# Add or Edit User
path.profile = /profile/new
title.profile = Add or Edit User

#_______________________________________________________________________________
# Tip of the day
#_______________________________________________________________________________
# You can inject HTML snippets on the fly by using the following syntax
# [(${@environment.getProperty('html.h3')})]
html.h3 = <h3>Index page</h3>


#server.port=9000
# _____________________________
# MySQL DATABASE SETTINGS
# _____________________________
#spring.datasource.url = jdbc:mysql://localhost:3306/db_name?useSSL=false&allowPublicKeyRetrieval=true
# `schema.sql` is optional (when you don't use JPA [ORM])
#spring.sql.init.schema-locations=classpath:sql/schema.sql
#spring.datasource.username = root
#spring.datasource.password = 12345678
